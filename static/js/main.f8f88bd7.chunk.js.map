{"version":3,"sources":["currencies.js","Form/Result/index.js","Form/index.js","Container/index.js","Clock/index.js","App.js","reportWebVitals.js","index.js"],"names":["currencies","short","name","rate","PLN","USD","EUR","Result","result","amount","toFixed","fromCurrency","resultAmount","toCurrency","Form","calculateResult","useState","setFromCurrency","setToCurrency","setAmount","className","onSubmit","event","preventDefault","value","onChange","target","map","currency","type","min","step","required","Container","children","Clock","date","Date","currentDate","setCurrentDate","useEffect","intervalId","setInterval","clearInterval","toLocaleDateString","undefined","month","weekday","day","hour","minute","second","App","setResult","find","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8f88bd7.chunk.js","sourcesContent":["const currencies = [\r\n    { short: \"PLN\", name: \"złoty\", rate: { PLN: 1, USD: 0.25, EUR: 0.22 } },\r\n    { short: \"EUR\", name: \"euro\", rate: { EUR: 1, PLN: 4.61, USD: 1.16 } },\r\n    { short: \"USD\", name: \"dolar amerykański\", rate: { USD: 1, PLN: 3.98, EUR: 0.86 } },\r\n];\r\n\r\nexport { currencies };","const Result = ({ result }) => (\r\n    <p>\r\n        {!!result && (\r\n            <>\r\n                {result.amount.toFixed(2)}&nbsp;{result.fromCurrency}&nbsp;=\r\n                {\" \"}\r\n                <strong>\r\n                    {result.resultAmount.toFixed(2)}&nbsp;{result.toCurrency}\r\n                </strong>\r\n            </>\r\n        )}\r\n    </p>\r\n);\r\n\r\nexport default Result;","import { useState } from 'react';\r\nimport { currencies } from '../currencies';\r\nimport Result from './Result';\r\nimport './style.css';\r\n\r\n\r\nconst Form = ({ calculateResult, result }) => {\r\n    const [fromCurrency, setFromCurrency] = useState(currencies[0].short);\r\n    const [toCurrency, setToCurrency] = useState(currencies[1].short);\r\n    const [amount, setAmount] = useState(1);\r\n\r\n    const onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        calculateResult(fromCurrency, toCurrency, amount);\r\n    };\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={onFormSubmit}>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legend\">Kalkulator walut</legend>\r\n                <p>\r\n                    <label>\r\n                        <span className=\"form__labelText\">\r\n                            Przelicz z:\r\n                        </span>\r\n                        <select\r\n                            className=\"form__field form__field--select\"\r\n                            value={fromCurrency}\r\n                            onChange={({ target }) => setFromCurrency(target.value)}\r\n                        >\r\n                            {currencies.map(currency => (\r\n                                <option key={currency.short} value={currency.short}>\r\n                                    {currency.name} ({currency.short})\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        <span className=\"form__labelText\">\r\n                            Przelicz na:\r\n                        </span>\r\n                        <select\r\n                            className=\"form__field form__field--select\"\r\n                            value={toCurrency}\r\n                            onChange={({ target }) => setToCurrency(target.value)}\r\n                        >\r\n                            {currencies.map(currency => (\r\n                                <option key={currency.short} value={currency.short}>\r\n                                    {currency.name} ({currency.short})\r\n                                </option>\r\n                            ))}\r\n                        </select>\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        <span className=\"form__labelText\">\r\n                            Kwota:\r\n                        </span>\r\n                        <input\r\n                            className=\"form__field\"\r\n                            value={amount}\r\n                            onChange={({ target }) => setAmount(target.value)}\r\n                            type=\"number\"\r\n                            min=\"0\"\r\n                            step=\"0.01\"\r\n                            required\r\n                        />\r\n                    </label>\r\n                </p>\r\n            </fieldset>\r\n            <p>\r\n                <button className=\"form__button\">\r\n                    Oblicz\r\n                </button>\r\n            </p>\r\n            <Result\r\n                result={result}\r\n            />\r\n            <p className=\"form__info\">\r\n                Kursy na dzień 02/11/21\r\n            </p>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Form;","import './style.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className=\"container\">\r\n        {children}\r\n    </div>\r\n);\r\n\r\nexport default Container;","import { useEffect, useState } from 'react';\r\nimport './style.css';\r\n\r\nconst formatDate = (date) => {\r\n    return date.toLocaleDateString(\r\n        undefined,\r\n        {\r\n            month: \"long\",\r\n            weekday: \"long\",\r\n            day: \"numeric\",\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n            second: \"numeric\"\r\n        }\r\n    );\r\n};\r\n\r\nconst Clock = () => {\r\n    const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setCurrentDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <p className=\"clock\">\r\n            Dzisiaj jest {formatDate(currentDate)}\r\n        </p>\r\n    )\r\n};\r\n\r\nexport default Clock;","import React, { useState } from 'react';\r\nimport Form from './Form';\r\nimport Container from './Container';\r\nimport Clock from './Clock';\r\nimport { currencies } from './currencies';\r\n\r\nfunction App() {\r\n  const [result, setResult] = useState();\r\n\r\n  const calculateResult = (fromCurrency, toCurrency, amount) => {\r\n    const currency = currencies.find(({ short }) => short === fromCurrency);\r\n    const rate = currency[\"rate\"][toCurrency];\r\n\r\n    const resultAmount = rate * amount;\r\n\r\n    setResult({ fromCurrency, toCurrency, amount: +amount, resultAmount });\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Clock />\r\n      <Form\r\n        calculateResult={calculateResult}\r\n        result={result}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}